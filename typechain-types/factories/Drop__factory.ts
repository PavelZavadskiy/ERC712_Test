/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Drop, DropInterface } from "../Drop";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
];

const _bytecode =
  "0x61014060405234801561001157600080fd5b50604051610259380380610259833981016040819052610030916100fd565b60408051808201825260058152640312e302e360dc1b60209182015282519281019290922060e08190527f06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c6101008190526107e260a081815284517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281870195909552606081810194909452608080820193909352308183018190528651808303909301835260c09182019096528151919096012090529190911b909152610120526101dc565b6000602080838503121561010f578182fd5b82516001600160401b0380821115610125578384fd5b818501915085601f830112610138578384fd5b81518181111561014a5761014a6101c6565b604051601f8201601f19908116603f01168101908382118183101715610172576101726101c6565b816040528281528886848701011115610189578687fd5b8693505b828410156101aa578484018601518185018701529285019261018d565b828411156101ba57868684830101525b98975050505050505050565b634e487b7160e01b600052604160045260246000fd5b60805160a05160c05160601c60e0516101005161012051603f61021a600039600050506000505060005050600050506000505060005050603f6000f3fe6080604052600080fdfea26469706673582212201af26e8b49b76ec94988564826db6084b9a28d9c2037b37799f790b62247719864736f6c63430008040033";

type DropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Drop__factory extends ContractFactory {
  constructor(...args: DropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Drop> {
    return super.deploy(name, overrides || {}) as Promise<Drop>;
  }
  getDeployTransaction(
    name: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, overrides || {});
  }
  attach(address: string): Drop {
    return super.attach(address) as Drop;
  }
  connect(signer: Signer): Drop__factory {
    return super.connect(signer) as Drop__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DropInterface {
    return new utils.Interface(_abi) as DropInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Drop {
    return new Contract(address, _abi, signerOrProvider) as Drop;
  }
}
